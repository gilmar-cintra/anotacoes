{
  "openapi": "3.0.1",
  "info": {
    "title": "Currículo Fácil",
    "description": "Uma ferramenta desenvolvida para gerar currículos de impacto ou simples de forma simples e rápida",
    "termsOfService": "http://swagger.io/terms/",
    "contact": {
      "email": "gilamar@kemiocode.com"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "version": "1.0.0"
  },
  "externalDocs": {
    "description": "Find out more about Swagger",
    "url": "http://swagger.io"
  },
  "servers": [
    {
      "url": "http://localhost:5000"
    }
  ],
  "tags": [
    {
      "name": "Users",
      "description": "Operações referente aos usuários."
    },
    {
      "name": "Auth",
      "description": "Login, logout e verificação de sessão."
    },
    {
      "name": "Fields",
      "description": "Gerencia os campos do curriculo. (experiências, educação, extracurriculares, etc)"
    }
  ],
  "paths": {
    "/public/users": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Cria um novo usuário",
        "description": "Rota pública para criar um novo usúario no sistema",
        "operationId": "createUser",
        "requestBody": {
          "description": "Os campos created, updated e active são preenchidos automanticamente",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserCreateFormData"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/UserCreateFormData"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Retorna os campos do usuário recem criado com excessão da senha.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserCreateResponse"
                }
              }
            }
          },
          "409": {
            "description": "O campo senha não pode ser null"
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/public/auth/login": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Possibilita o login do usuario",
        "description": "Rota pública para logar os usuários no sistema",
        "operationId": "login",
        "requestBody": {
          "description": "Os campos e-mail e password são obrigatórios",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginFormData"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/LoginFormData"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login realizado com sucesso!",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserCreateResponse"
                }
              }
            }
          },
          "401": {
            "description": "Não autorizado"
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/public/auth/logout": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Possibilita o logout do usuario",
        "description": "Rota pública para deslogar os usuários no sistema",
        "operationId": "logout",
        "responses": {
          "200": {
            "description": "Logout realizado com sucesso!"
          }
        }
      }
    },
    "/auth/check_session": {
      "get": {
        "tags": [
          "Auth"
        ],
        "summary": "Possibilita verificar se o usuário está logado do usuario",
        "description": "Rota privada para logar os usuários no sistema",
        "operationId": "check",
        "responses": {
          "200": {
            "description": "Usuário está com sessão válida"
          },
          "401": {
            "description": "Usuário sem sessão válida"
          }
        }
      }
    },
    "/fields/types": {
      "get": {
        "tags": [
          "Fields"
        ],
        "summary": "Retorna todos os tipos de fields",
        "description": "Rota privada listar todos os fields types do sistema",
        "operationId": "fieldsTypes",
        "responses": {
          "200": {
            "description": "Array de objetos field type",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FieldType"
                }
              }
            }
          },
          "401": {
            "description": "Usuário não logado no sistema"
          }
        }
      }
    },
    "/fields": {
      "post": {
        "tags": [
          "Fields"
        ],
        "summary": "Cria um novo field para o usuário",
        "description": "Rota privada só com acesso logado",
        "operationId": "createField",
        "requestBody": {
          "description": "Os campos created e updated são preenchidos automanticamente",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FieldCreateFormData"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/FieldCreateFormData"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Objeto field",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Field"
                }
              }
            }
          },
          "204": {
            "description": "Usuário envio algum campo do formulário em branco"
          },
          "401": {
            "description": "Usuário logado diferente do que se busca o Id"
          },
          "500": {
            "description": "Erro interno do servidor"
          }
        }
      },
      "get": {
        "summary": "Retorna todos fields do usuário logado",
        "description": "Rota privada que lista os fields do usuário na sessão",
        "operationId": "listFields",
        "responses": {
          "200": {
            "description": "array de objetos fields",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Field"
                }
              }
            }
          },
          "500": {
            "description": "Erro interno do servidor"
          }
        },
        "tags": [
          "Fields"
        ]
      }
    },
    "/fields/{fieldId}": {
      "get": {
        "tags": [
          "Fields"
        ],
        "summary": "Retorna um field especifico pelo seu Id, desde que seja de propriedade do usuário",
        "description": "Rota privada que só pode ser acessado pelo mesmo id de quem estiver logado",
        "operationId": "field",
        "parameters": [
          {
            "name": "fieldId",
            "in": "path",
            "description": "Id do field",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retorna um objeto field",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Field"
                }
              }
            }
          },
          "401": {
            "description": "Usuário logado diferente do que se busca"
          },
          "500": {
            "description": "Erro interno do servidor"
          }
        }
      },
      "put": {
        "tags": [
          "Fields"
        ],
        "summary": "Atualiza um field especifico pelo seu Id, desde que seja de propriedade do usuário",
        "description": "Rota privada só com acesso logado",
        "operationId": "editField",
        "parameters": [
          {
            "name": "fieldId",
            "in": "path",
            "description": "Id do field",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "description": "Os campos created e updated são preenchidos automanticamente",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FieldCreateFormData"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/FieldCreateFormData"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Objeto field",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Field"
                }
              }
            }
          },
          "204": {
            "description": "Usuário envio algum campo do formulário em branco"
          },
          "401": {
            "description": "Usuário logado diferente do que se busca o Id"
          },
          "500": {
            "description": "Erro interno do servidor"
          }
        }
      },
      "delete": {
        "tags": [
          "Fields"
        ],
        "summary": "Deleta o um field especifico pelo seu Id, desde que seja de propriedade do usuário",
        "description": "Rota privada só com acesso logado",
        "operationId": "deleteField",
        "parameters": [
          {
            "name": "fieldId",
            "in": "path",
            "description": "Id do field",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Field excluido com sucesso"
          },
          "401": {
            "description": "Usuário logado diferente do que se busca o Id"
          },
          "500": {
            "description": "Erro interno do servidor"
          }
        }
      }
    },
    "/emails/types": {
      "get": {
        "tags": [
          "Emails"
        ],
        "summary": "Retorna todos os tipos de emails",
        "description": "Rota privada listar todos os emails types do sistema",
        "operationId": "emailsTypes",
        "responses": {
          "200": {
            "description": "Array de objetos email type",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmailType"
                }
              }
            }
          },
          "401": {
            "description": "Usuário não logado no sistema"
          }
        }
      }
    },
    "/emails": {
      "post": {
        "tags": [
          "Emails"
        ],
        "summary": "Cria um novo email para o usuário",
        "description": "Rota privada só com acesso logado",
        "operationId": "createEmail",
        "requestBody": {
          "description": "Os campos created e updated são preenchidos automanticamente",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmailCreateFormData"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/EmailCreateFormData"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Objeto email",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Email"
                }
              }
            }
          },
          "204": {
            "description": "Usuário envio algum campo do formulário em branco"
          },
          "401": {
            "description": "Usuário logado diferente do que se busca o Id"
          },
          "500": {
            "description": "Erro interno do servidor"
          }
        }
      },
      "get": {
        "summary": "Retorna todos emails do usuário logado",
        "description": "Rota privada que lista os emails do usuário na sessão",
        "operationId": "listEmails",
        "responses": {
          "200": {
            "description": "array de objetos email",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Email"
                }
              }
            }
          },
          "500": {
            "description": "Erro interno do servidor"
          }
        },
        "tags": [
          "Emails"
        ]
      }
    },
    "/emails/{emailId}": {
      "get": {
        "tags": [
          "Emails"
        ],
        "summary": "Retorna um email especifico pelo seu Id, desde que seja de propriedade do usuário",
        "description": "Rota privada que só pode ser acessado pelo mesmo id de quem estiver logado",
        "operationId": "email",
        "parameters": [
          {
            "name": "emailId",
            "in": "path",
            "description": "Id do email",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retorna um objeto email",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Email"
                }
              }
            }
          },
          "401": {
            "description": "Usuário logado diferente do que se busca"
          },
          "500": {
            "description": "Erro interno do servidor"
          }
        }
      },
      "put": {
        "tags": [
          "Emails"
        ],
        "summary": "Atualiza um email especifico pelo seu Id, desde que seja de propriedade do usuário",
        "description": "Rota privada só com acesso logado",
        "operationId": "editEmail",
        "parameters": [
          {
            "name": "emailId",
            "in": "path",
            "description": "Id do email",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "description": "Os campos created e updated são preenchidos automanticamente",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmailEditFormData"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/EmailEditFormData"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Objeto email",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Email"
                }
              }
            }
          },
          "204": {
            "description": "Usuário envio algum campo do formulário em branco"
          },
          "500": {
            "description": "Erro interno do servidor"
          }
        }
      },
      "delete": {
        "tags": [
          "Emails"
        ],
        "summary": "Deleta o um email especifico pelo seu Id, desde que seja de propriedade do usuário",
        "description": "Rota privada só com acesso logado",
        "operationId": "deleteEmail",
        "parameters": [
          {
            "name": "emailId",
            "in": "path",
            "description": "Id do email",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "email excluido com sucesso"
          },
          "401": {
            "description": "Usuário logado diferente do que se busca o Id"
          },
          "500": {
            "description": "Erro interno do servidor"
          }
        }
      }
    },
    "/skills/types": {
      "get": {
        "tags": [
          "Skills"
        ],
        "summary": "Retorna todos os tipos de skills",
        "description": "Rota privada listar todos os skills types do sistema",
        "operationId": "skillsTypes",
        "responses": {
          "200": {
            "description": "Array de objetos skill type",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SkillType"
                }
              }
            }
          },
          "401": {
            "description": "Usuário não logado no sistema"
          }
        }
      }
    },
    "/skills": {
      "post": {
        "tags": [
          "Skills"
        ],
        "summary": "Cria um novo skill para o usuário",
        "description": "Rota privada só com acesso logado",
        "operationId": "createSkill",
        "requestBody": {
          "description": "Os campos created e updated são preenchidos automanticamente",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SkillCreateFormData"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/SkillCreateFormData"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Objeto skill",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Skill"
                }
              }
            }
          },
          "204": {
            "description": "Usuário envio algum campo do formulário em branco"
          },
          "401": {
            "description": "Usuário logado diferente do que se busca o Id"
          },
          "500": {
            "description": "Erro interno do servidor"
          }
        }
      },
      "get": {
        "summary": "Retorna todos skills do usuário logado",
        "description": "Rota privada que lista os skills do usuário na sessão",
        "operationId": "listSkills",
        "responses": {
          "200": {
            "description": "array de objetos skill",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Skill"
                }
              }
            }
          },
          "500": {
            "description": "Erro interno do servidor"
          }
        },
        "tags": [
          "Skills"
        ]
      }
    },
    "/skills/{skillLevelId}": {
      "get": {
        "tags": [
          "Skills"
        ],
        "summary": "Retorna um skill especifico pelo seu Id, desde que seja de propriedade do usuário",
        "description": "Rota privada que só pode ser acessado pelo mesmo id de quem estiver logado",
        "operationId": "skill",
        "parameters": [
          {
            "name": "skillLevelId",
            "in": "path",
            "description": "Id do skill",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retorna um objeto skill",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Skill"
                }
              }
            }
          },
          "401": {
            "description": "Usuário logado diferente do que se busca"
          },
          "500": {
            "description": "Erro interno do servidor"
          }
        }
      },
      "put": {
        "tags": [
          "Skills"
        ],
        "summary": "Atualiza um skill especifico pelo seu Id, desde que seja de propriedade do usuário",
        "description": "Rota privada só com acesso logado",
        "operationId": "editSkill",
        "parameters": [
          {
            "name": "skillLevelId",
            "in": "path",
            "description": "Id do skill level",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "description": "Os campos created e updated são preenchidos automanticamente",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SkillCreateFormData"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/SkillCreateFormData"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Objeto skill",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Skill"
                }
              }
            }
          },
          "204": {
            "description": "Usuário envio algum campo do formulário em branco"
          },
          "500": {
            "description": "Erro interno do servidor"
          }
        }
      },
      "delete": {
        "tags": [
          "Skills"
        ],
        "summary": "Deleta o um skill especifico pelo seu Id, desde que seja de propriedade do usuário",
        "description": "Rota privada só com acesso logado",
        "operationId": "deleteSkill",
        "parameters": [
          {
            "name": "skillLevelId",
            "in": "path",
            "description": "Id do skill",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "skill excluido com sucesso"
          },
          "401": {
            "description": "Usuário logado diferente do que se busca o Id"
          },
          "500": {
            "description": "Erro interno do servidor"
          }
        }
      }
    },
    "/phones/types": {
      "get": {
        "tags": [
          "Phones"
        ],
        "summary": "Retorna todos os tipos de phones",
        "description": "Rota privada listar todos os phones types do sistema",
        "operationId": "phonesTypes",
        "responses": {
          "200": {
            "description": "Array de objetos phone type",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PhoneType"
                }
              }
            }
          },
          "401": {
            "description": "Usuário não logado no sistema"
          }
        }
      }
    },
    "/phones": {
      "post": {
        "tags": [
          "Phones"
        ],
        "summary": "Cria um novo phone para o usuário",
        "description": "Rota privada só com acesso logado",
        "operationId": "createPhone",
        "requestBody": {
          "description": "Os campos created e updated são preenchidos automanticamente",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PhoneCreateFormData"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/PhoneCreateFormData"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Objeto phone",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Phone"
                }
              }
            }
          },
          "204": {
            "description": "Usuário envio algum campo do formulário em branco"
          },
          "401": {
            "description": "Usuário logado diferente do que se busca o Id"
          },
          "500": {
            "description": "Erro interno do servidor"
          }
        }
      },
      "get": {
        "summary": "Retorna todos phones do usuário logado",
        "description": "Rota privada que lista os phones do usuário na sessão",
        "operationId": "listPhones",
        "responses": {
          "200": {
            "description": "array de objetos phone",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Phone"
                }
              }
            }
          },
          "500": {
            "description": "Erro interno do servidor"
          }
        },
        "tags": [
          "Phones"
        ]
      }
    },
    "/phones/{phoneId}": {
      "get": {
        "tags": [
          "Phones"
        ],
        "summary": "Retorna um phone especifico pelo seu Id, desde que seja de propriedade do usuário",
        "description": "Rota privada que só pode ser acessado pelo mesmo id de quem estiver logado",
        "operationId": "phone",
        "parameters": [
          {
            "name": "phoneId",
            "in": "path",
            "description": "Id do phone",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retorna um objeto phone",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Phone"
                }
              }
            }
          },
          "401": {
            "description": "Usuário logado diferente do que se busca"
          },
          "500": {
            "description": "Erro interno do servidor"
          }
        }
      },
      "put": {
        "tags": [
          "Phones"
        ],
        "summary": "Atualiza um phone especifico pelo seu Id, desde que seja de propriedade do usuário",
        "description": "Rota privada só com acesso logado",
        "operationId": "editPhone",
        "parameters": [
          {
            "name": "phoneId",
            "in": "path",
            "description": "Id do phone",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "description": "Os campos created e updated são preenchidos automanticamente",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PhoneEditFormData"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/PhoneEditFormData"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Objeto phone",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Phone"
                }
              }
            }
          },
          "204": {
            "description": "Usuário envio algum campo do formulário em branco"
          },
          "500": {
            "description": "Erro interno do servidor"
          }
        }
      },
      "delete": {
        "tags": [
          "Phones"
        ],
        "summary": "Deleta o um phone especifico pelo seu Id, desde que seja de propriedade do usuário",
        "description": "Rota privada só com acesso logado",
        "operationId": "deletePhone",
        "parameters": [
          {
            "name": "phoneId",
            "in": "path",
            "description": "Id do phone",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "phone excluido com sucesso"
          },
          "401": {
            "description": "Usuário logado diferente do que se busca o Id"
          },
          "500": {
            "description": "Erro interno do servidor"
          }
        }
      }
    },
    "/networks/types": {
      "get": {
        "tags": [
          "Networks"
        ],
        "summary": "Retorna todos os tipos de networks",
        "description": "Rota privada listar todos os networks types do sistema",
        "operationId": "networksTypes",
        "responses": {
          "200": {
            "description": "Array de objetos network type",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NetworkType"
                }
              }
            }
          },
          "401": {
            "description": "Usuário não logado no sistema"
          }
        }
      }
    },
    "/networks": {
      "post": {
        "tags": [
          "Networks"
        ],
        "summary": "Cria um novo network para o usuário",
        "description": "Rota privada só com acesso logado",
        "operationId": "createNetwork",
        "requestBody": {
          "description": "Os campos created e updated são preenchidos automanticamente",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NetworkCreateFormData"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/NetworkCreateFormData"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Objeto network",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Network"
                }
              }
            }
          },
          "204": {
            "description": "Usuário envio algum campo do formulário em branco"
          },
          "401": {
            "description": "Usuário logado diferente do que se busca o Id"
          },
          "500": {
            "description": "Erro interno do servidor"
          }
        }
      },
      "get": {
        "summary": "Retorna todos networks do usuário logado",
        "description": "Rota privada que lista os networks do usuário na sessão",
        "operationId": "listNetworks",
        "responses": {
          "200": {
            "description": "array de objetos network",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Network"
                }
              }
            }
          },
          "500": {
            "description": "Erro interno do servidor"
          }
        },
        "tags": [
          "Networks"
        ]
      }
    },
    "/networks/{networkId}": {
      "get": {
        "tags": [
          "Networks"
        ],
        "summary": "Retorna um network especifico pelo seu Id, desde que seja de propriedade do usuário",
        "description": "Rota privada que só pode ser acessado pelo mesmo id de quem estiver logado",
        "operationId": "network",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "description": "Id do network",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retorna um objeto network",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Network"
                }
              }
            }
          },
          "401": {
            "description": "Usuário logado diferente do que se busca"
          },
          "500": {
            "description": "Erro interno do servidor"
          }
        }
      },
      "put": {
        "tags": [
          "Networks"
        ],
        "summary": "Atualiza um network especifico pelo seu Id, desde que seja de propriedade do usuário",
        "description": "Rota privada só com acesso logado",
        "operationId": "editNetwork",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "description": "Id do network",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "description": "Os campos created e updated são preenchidos automanticamente",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NetworkEditFormData"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/NetworkEditFormData"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Objeto network",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Network"
                }
              }
            }
          },
          "204": {
            "description": "Usuário envio algum campo do formulário em branco"
          },
          "500": {
            "description": "Erro interno do servidor"
          }
        }
      },
      "delete": {
        "tags": [
          "Networks"
        ],
        "summary": "Deleta o um network especifico pelo seu Id, desde que seja de propriedade do usuário",
        "description": "Rota privada só com acesso logado",
        "operationId": "deleteNetwork",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "description": "Id do network",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "network excluido com sucesso"
          },
          "401": {
            "description": "Usuário logado diferente do que se busca o Id"
          },
          "500": {
            "description": "Erro interno do servidor"
          }
        }
      }
    },
    "/languages/types": {
      "get": {
        "tags": [
          "Languages"
        ],
        "summary": "Retorna todos os tipos de languages",
        "description": "Rota privada listar todos os languages types do sistema",
        "operationId": "languagesTypes",
        "responses": {
          "200": {
            "description": "Array de objetos language type",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LanguageType"
                }
              }
            }
          },
          "401": {
            "description": "Usuário não logado no sistema"
          }
        }
      }
    },
    "/languages": {
      "post": {
        "tags": [
          "Languages"
        ],
        "summary": "Cria um novo language para o usuário",
        "description": "Rota privada só com acesso logado",
        "operationId": "createLanguage",
        "requestBody": {
          "description": "Os campos created e updated são preenchidos automanticamente",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LanguageCreateFormData"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/LanguageCreateFormData"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Objeto language",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Language"
                }
              }
            }
          },
          "204": {
            "description": "Usuário envio algum campo do formulário em branco"
          },
          "401": {
            "description": "Usuário logado diferente do que se busca o Id"
          },
          "500": {
            "description": "Erro interno do servidor"
          }
        }
      },
      "get": {
        "summary": "Retorna todos languages do usuário logado",
        "description": "Rota privada que lista os languages do usuário na sessão",
        "operationId": "listLanguages",
        "responses": {
          "200": {
            "description": "array de objetos language",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Language"
                }
              }
            }
          },
          "500": {
            "description": "Erro interno do servidor"
          }
        },
        "tags": [
          "Languages"
        ]
      }
    },
    "/languages/{languageId}": {
      "get": {
        "tags": [
          "Languages"
        ],
        "summary": "Retorna um language especifico pelo seu Id, desde que seja de propriedade do usuário",
        "description": "Rota privada que só pode ser acessado pelo mesmo id de quem estiver logado",
        "operationId": "language",
        "parameters": [
          {
            "name": "languageId",
            "in": "path",
            "description": "Id do language",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retorna um objeto language",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Language"
                }
              }
            }
          },
          "401": {
            "description": "Usuário logado diferente do que se busca"
          },
          "500": {
            "description": "Erro interno do servidor"
          }
        }
      },
      "put": {
        "tags": [
          "Languages"
        ],
        "summary": "Atualiza um language especifico pelo seu Id, desde que seja de propriedade do usuário",
        "description": "Rota privada só com acesso logado",
        "operationId": "editLanguage",
        "parameters": [
          {
            "name": "languageId",
            "in": "path",
            "description": "Id do language",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "description": "Os campos created e updated são preenchidos automanticamente",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LanguageEditFormData"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/LanguageEditFormData"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Objeto language",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Language"
                }
              }
            }
          },
          "204": {
            "description": "Usuário envio algum campo do formulário em branco"
          },
          "500": {
            "description": "Erro interno do servidor"
          }
        }
      },
      "delete": {
        "tags": [
          "Languages"
        ],
        "summary": "Deleta o um language especifico pelo seu Id, desde que seja de propriedade do usuário",
        "description": "Rota privada só com acesso logado",
        "operationId": "deleteLanguage",
        "parameters": [
          {
            "name": "languageId",
            "in": "path",
            "description": "Id do language",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "language excluido com sucesso"
          },
          "401": {
            "description": "Usuário logado diferente do que se busca o Id"
          },
          "500": {
            "description": "Erro interno do servidor"
          }
        }
      }
    },
    "/vancancies": {
      "post": {
        "tags": [
          "Vancancies"
        ],
        "summary": "Cria um novo vancancy para o usuário",
        "description": "Rota privada só com acesso logado",
        "operationId": "createVacancy",
        "requestBody": {
          "description": "Os campos created e updated são preenchidos automanticamente",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmailCreateFormData"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/EmailCreateFormData"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Objeto vancancy",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Vacancy"
                }
              }
            }
          },
          "204": {
            "description": "Usuário envio algum campo do formulário em branco"
          },
          "401": {
            "description": "Usuário logado diferente do que se busca o Id"
          },
          "500": {
            "description": "Erro interno do servidor"
          }
        }
      },
      "get": {
        "summary": "Retorna todos vancancies do usuário logado",
        "description": "Rota privada que lista os vancancies do usuário na sessão",
        "operationId": "listVancancies",
        "responses": {
          "200": {
            "description": "array de objetos vancancy",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Vacancy"
                }
              }
            }
          },
          "500": {
            "description": "Erro interno do servidor"
          }
        },
        "tags": [
          "Vancancies"
        ]
      }
    },
    "/vancancies/{emailId}": {
      "get": {
        "tags": [
          "Vancancies"
        ],
        "summary": "Retorna um vancancy especifico pelo seu Id, desde que seja de propriedade do usuário",
        "description": "Rota privada que só pode ser acessado pelo mesmo id de quem estiver logado",
        "operationId": "vancancy",
        "parameters": [
          {
            "name": "emailId",
            "in": "path",
            "description": "Id do vancancy",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retorna um objeto vancancy",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Vacancy"
                }
              }
            }
          },
          "401": {
            "description": "Usuário logado diferente do que se busca"
          },
          "500": {
            "description": "Erro interno do servidor"
          }
        }
      },
      "put": {
        "tags": [
          "Vancancies"
        ],
        "summary": "Atualiza um vancancy especifico pelo seu Id, desde que seja de propriedade do usuário",
        "description": "Rota privada só com acesso logado",
        "operationId": "editVacancy",
        "parameters": [
          {
            "name": "emailId",
            "in": "path",
            "description": "Id do vancancy",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "description": "Os campos created e updated são preenchidos automanticamente",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmailEditFormData"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/EmailEditFormData"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Objeto vancancy",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Vacancy"
                }
              }
            }
          },
          "204": {
            "description": "Usuário envio algum campo do formulário em branco"
          },
          "500": {
            "description": "Erro interno do servidor"
          }
        }
      },
      "delete": {
        "tags": [
          "Vancancies"
        ],
        "summary": "Deleta o um vancancy especifico pelo seu Id, desde que seja de propriedade do usuário",
        "description": "Rota privada só com acesso logado",
        "operationId": "deleteVacancy",
        "parameters": [
          {
            "name": "emailId",
            "in": "path",
            "description": "Id do vancancy",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "vancancy excluido com sucesso"
          },
          "401": {
            "description": "Usuário logado diferente do que se busca o Id"
          },
          "500": {
            "description": "Erro interno do servidor"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "UserCreateResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "updated": {
            "type": "string",
            "format": "date-time"
          },
          "active": {
            "type": "boolean"
          }
        }
      },
      "UserCreateFormData": {
        "type": "object",
        "required": [
          "name",
          "email",
          "password"
        ],
        "properties": {
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        }
      },
      "LoginFormData": {
        "type": "object",
        "required": [
          "email",
          "password"
        ],
        "properties": {
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        }
      },
      "FieldType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "type": {
            "type": "string"
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "updated": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "Field": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "userId": {
            "type": "integer",
            "format": "int64"
          },
          "fieldTypeId": {
            "type": "integer",
            "format": "int64"
          },
          "title": {
            "type": "string"
          },
          "entity": {
            "type": "string"
          },
          "startDate": {
            "type": "string",
            "format": "date"
          },
          "endDate": {
            "type": "string",
            "format": "date"
          },
          "description": {
            "type": "string"
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "updated": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "FieldCreateFormData": {
        "type": "object",
        "required": [
          "fieldTypeId",
          "title",
          "entity",
          "startDate",
          "endDate",
          "description"
        ],
        "properties": {
          "fieldTypeId": {
            "type": "integer",
            "format": "int64"
          },
          "title": {
            "type": "string"
          },
          "entity": {
            "type": "string"
          },
          "startDate": {
            "type": "string",
            "format": "date",
            "example": "2013-09-02"
          },
          "endDate": {
            "type": "string",
            "format": "date",
            "example": "2017-07-10"
          },
          "description": {
            "type": "string"
          }
        }
      },
      "Email": {
        "type": "object",
        "required": [
          "id",
          "email",
          "emailTypeId",
          "userId",
          "created",
          "updated"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "email": {
            "type": "string"
          },
          "emailTypeId": {
            "type": "integer",
            "format": "int64"
          },
          "userId": {
            "type": "integer",
            "format": "int64"
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "updated": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "EmailCreateFormData": {
        "type": "object",
        "required": [
          "email",
          "emailTypeId",
          "userId"
        ],
        "properties": {
          "email": {
            "type": "string"
          },
          "emailTypeId": {
            "type": "integer",
            "format": "int64"
          },
          "userId": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "EmailEditFormData": {
        "type": "object",
        "required": [
          "email",
          "emailTypeId"
        ],
        "properties": {
          "email": {
            "type": "string"
          },
          "emailTypeId": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "EmailType": {
        "type": "object",
        "required": [
          "id",
          "type",
          "created",
          "updated"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "type": {
            "type": "string"
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "updated": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "Skills": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "skill": {
            "type": "string"
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "updated": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "SkillsLevels": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "userId": {
            "type": "integer",
            "format": "int64"
          },
          "skillId": {
            "type": "integer",
            "format": "int64"
          },
          "stars": {
            "type": "integer",
            "format": "int64"
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "updated": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "Phone": {
        "type": "object",
        "required": [
          "id",
          "phone",
          "phoneTypeId",
          "userId",
          "created",
          "updated"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "phone": {
            "type": "string"
          },
          "phoneTypeId": {
            "type": "integer",
            "format": "int64"
          },
          "userId": {
            "type": "integer",
            "format": "int64"
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "updated": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "PhoneCreateFormData": {
        "type": "object",
        "required": [
          "phone",
          "phoneTypeId",
          "userId"
        ],
        "properties": {
          "phone": {
            "type": "string"
          },
          "phoneTypeId": {
            "type": "integer",
            "format": "int64"
          },
          "userId": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "PhoneEditFormData": {
        "type": "object",
        "required": [
          "phone",
          "phoneTypeId"
        ],
        "properties": {
          "phone": {
            "type": "string"
          },
          "phoneTypeId": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "PhoneType": {
        "type": "object",
        "required": [
          "id",
          "type",
          "created",
          "updated"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "type": {
            "type": "string"
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "updated": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "Network": {
        "type": "object",
        "required": [
          "id",
          "network",
          "networkTypeId",
          "userId",
          "created",
          "updated"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "network": {
            "type": "string"
          },
          "networkTypeId": {
            "type": "integer",
            "format": "int64"
          },
          "userId": {
            "type": "integer",
            "format": "int64"
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "updated": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "NetworkCreateFormData": {
        "type": "object",
        "required": [
          "network",
          "networkTypeId",
          "userId"
        ],
        "properties": {
          "network": {
            "type": "string"
          },
          "networkTypeId": {
            "type": "integer",
            "format": "int64"
          },
          "userId": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "NetworkEditFormData": {
        "type": "object",
        "required": [
          "network",
          "networkTypeId"
        ],
        "properties": {
          "network": {
            "type": "string"
          },
          "networkTypeId": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "NetworkType": {
        "type": "object",
        "required": [
          "id",
          "type",
          "created",
          "updated"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "type": {
            "type": "string"
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "updated": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "Language": {
        "type": "object",
        "required": [
          "id",
          "network",
          "networkTypeId",
          "userId",
          "created",
          "updated"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "network": {
            "type": "string"
          },
          "networkTypeId": {
            "type": "integer",
            "format": "int64"
          },
          "userId": {
            "type": "integer",
            "format": "int64"
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "updated": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "LanguageCreateFormData": {
        "type": "object",
        "required": [
          "network",
          "networkTypeId",
          "userId"
        ],
        "properties": {
          "network": {
            "type": "string"
          },
          "networkTypeId": {
            "type": "integer",
            "format": "int64"
          },
          "userId": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "LanguageEditFormData": {
        "type": "object",
        "required": [
          "network",
          "networkTypeId"
        ],
        "properties": {
          "network": {
            "type": "string"
          },
          "networkTypeId": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "LanguageType": {
        "type": "object",
        "required": [
          "id",
          "type",
          "created",
          "updated"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "type": {
            "type": "string"
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "updated": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "Vacancy": {
        "type": "object",
        "required": [
          "id",
          "vacancy",
          "vacancyTypeId",
          "userId",
          "created",
          "updated"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "vacancy": {
            "type": "string"
          },
          "vacancyTypeId": {
            "type": "integer",
            "format": "int64"
          },
          "userId": {
            "type": "integer",
            "format": "int64"
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "updated": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "Skills": {
        "type": "object",
        "required": [
          "id",
          "userId",
          "skillId",
          "stars",
          "created",
          "updated"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "userId": {
            "type": "integer",
            "format": "int64"
          },
          "skillId": {
            "type": "integer",
            "format": "int64"
          },
          "stars": {
            "type": "integer",
            "format": "int64"
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "updated": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "SkillCreateFormData": {
        "type": "object",
        "required": [
          "skillId",
          "stars",
          "created",
          "updated"
        ],
        "properties": {
          "skillId": {
            "type": "integer",
            "format": "int64"
          },
          "stars": {
            "type": "integer",
            "format": "int64"
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "updated": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "SkillEditFormData": {
        "type": "object",
        "required": [
          "skillId",
          "stars",
          "created",
          "updated"
        ],
        "properties": {
          "skillId": {
            "type": "integer",
            "format": "int64"
          },
          "stars": {
            "type": "integer",
            "format": "int64"
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "updated": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "VacancyCreateFormData": {
        "type": "object",
        "required": [
          "vacancy",
          "vacancyTypeId",
          "userId"
        ],
        "properties": {
          "vacancy": {
            "type": "string"
          },
          "vacancyTypeId": {
            "type": "integer",
            "format": "int64"
          },
          "userId": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "VacancyEditFormData": {
        "type": "object",
        "required": [
          "vacancy",
          "vacancyTypeId"
        ],
        "properties": {
          "vacancy": {
            "type": "string"
          },
          "vacancyTypeId": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "VacancyType": {
        "type": "object",
        "required": [
          "id",
          "type",
          "created",
          "updated"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "type": {
            "type": "string"
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "updated": {
            "type": "string",
            "format": "date-time"
          }
        }
      }
    }
  }
}